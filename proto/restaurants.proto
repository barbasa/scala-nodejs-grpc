syntax = "proto3";
package demogrpc;

// Next ID: 9
message Restaurant {
    string id = 1;
    string name = 3;
    string address = 4;
    repeated string cuisineKeywords = 5;
    string logo = 6;
    uint64 distanceMeters = 7;
    GeoPoint coordinates = 8;
}

// Next ID: 3
message GeoPoint {
    double latitude = 1;
    double longitude = 2;
}

// Next ID: 6
message SearchRestaurantRequest {
    // Can be none, in which case no location is included in the query.
    oneof location {
        string postcode = 1;
        GeoPoint coordinates = 2;
    }

    // "Opened at" timestamp. If specified, only returns restaurants that are opened at the requested time according
    // to the opening hours.
    int64 openedAt = 3;

    // If specified, only returns restaurants that have a particular cuisine type.
    string cuisine = 4;

    // Limit the number of hits returned to this value.
    uint32 limit = 5;
}

// Next ID: 3
message SearchRestaurantResponseInfo {
    uint32 totalHits = 1;

    uint64 timeTaken = 2;
}

// Next ID: 3
message SearchRestaurantResponse {
    repeated Restaurant restaurants = 1;
    SearchRestaurantResponseInfo info = 2;
}

// Next ID: 2
message LookupRestaurantRequest {
    string documentId = 1;
}

// Next ID: 2
message LookupRestaurantResponse {
    Restaurant restaurant = 1;
}

service SearchRestaurantService {
    rpc SearchRestaurant (SearchRestaurantRequest) returns (SearchRestaurantResponse) {}
    rpc LookupRestaurant (LookupRestaurantRequest) returns (LookupRestaurantResponse) {}
}
